apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-bdd2
spec:
  capacity:
    storage: 200Mi
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  hostPath:
    path: "/mnt/data/mysql2"  # Ensure this path exists on the node

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-with-secret-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 80Mi
  storageClassName: manual    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-with-secret-depy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-with-secret-pod
  template:
    metadata:
      labels:
        app: mysql-with-secret-pod
    spec:
      containers:
       - image: mysql
         name: mysql-with-secret-container
         imagePullPolicy: Always   
         env:
            - name: "MYSQL_DATABASE"
              valueFrom: 
                secretKeyRef:
                  name: mysql-secret
                  key: BDD

            - name: "MYSQL_ROOT_PASSWORD"
              valueFrom: 
                secretKeyRef:
                  name: mysql-secret
                  key: ROOT_PASSWORD

            - name: "MYSQL_ROOT_USER"
              value: "root"
         ports:
           - containerPort: 3306
         
         volumeMounts:
           - name: mysql-with-secret-persistent-storage
             mountPath: /var/lib/mysql
      volumes:
      - name: mysql-with-secret-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-with-secret-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-with-secret-srv
spec:
  ports:
  - port: 3306
  selector:
    app: mysql-with-secret-pod      